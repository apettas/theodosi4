# THEODOSI4 Production Environment Configuration
# Copy this file to .env and update the values for your production environment

# ==========================================
# DJANGO SETTINGS
# ==========================================
DEBUG=False
SECRET_KEY=CHANGE-THIS-TO-A-VERY-LONG-RANDOM-SECRET-KEY-FOR-PRODUCTION-MINIMUM-50-CHARACTERS
ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com,your-server-ip-address

# ==========================================
# POSTGRESQL DATABASE SETTINGS
# ==========================================
DB_NAME=theodosi4_prod
DB_USER=theodosi4_user
DB_PASSWORD=CHANGE-THIS-TO-A-SECURE-DATABASE-PASSWORD
DB_HOST=db
DB_PORT=5432

# Alternative: Use DATABASE_URL instead of individual DB_* variables
# DATABASE_URL=postgresql://theodosi4_user:your-password@db:5432/theodosi4_prod

# ==========================================
# EMAIL SETTINGS (Optional)
# ==========================================
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-gmail-app-password
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False

# For other email providers:
# EMAIL_HOST=smtp.your-provider.com
# EMAIL_PORT=587 (or 465 for SSL)

# ==========================================
# SECURITY SETTINGS (Optional)
# ==========================================
# Force HTTPS in production
# SECURE_SSL_REDIRECT=True
# SECURE_HSTS_SECONDS=31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True
# SECURE_HSTS_PRELOAD=True

# ==========================================
# STATIC FILES (Handled by WhiteNoise)
# ==========================================
# No additional configuration needed - WhiteNoise handles everything automatically

# ==========================================
# LOGGING (Optional)
# ==========================================
# DJANGO_LOG_LEVEL=INFO

# ==========================================
# INSTRUCTIONS FOR SETUP
# ==========================================
# 1. Copy this file: cp .env.production.template .env
# 2. Edit the .env file: nano .env
# 3. Replace ALL CHANGE-THIS values with secure production values
# 4. Make sure ALLOWED_HOSTS includes your domain and server IP
# 5. Generate a strong SECRET_KEY (50+ random characters)
# 6. Use a strong database password
# 7. Configure email settings if you need email functionality
# 8. Save the file and run: ./deploy_ubuntu.sh

# ==========================================
# GENERATE SECRET KEY
# ==========================================
# You can generate a strong secret key with:
# python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"